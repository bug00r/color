#MAKE?=mingw32-make
AR?=ar
ARFLAGS?=rcs
PATHSEP?=/
CC=gcc
BUILDROOT?=build

ifeq ($(CLANG),1)
	export CC=clang
endif

BUILDDIR?=$(BUILDROOT)$(PATHSEP)$(CC)
BUILDPATH?=$(BUILDDIR)$(PATHSEP)

INSTALL_ROOT?=$(BUILDPATH)

ifeq ($(DEBUG),1)
	export debug=-ggdb -Ddebug=1
	export isdebug=1
endif

ifeq ($(ANALYSIS),1)
	export analysis=-Danalysis=1
	export isanalysis=1
endif

ifeq ($(DEBUG),2)
	export debug=-ggdb -Ddebug=2
	export isdebug=1
endif

ifeq ($(DEBUG),3)
	export debug=-ggdb -Ddebug=3
	export isdebug=1
endif

ifeq ($(OUTPUT),1)
	export outimg= -Doutput=1
endif

CFLAGS=-std=c11 -Wpedantic -pedantic-errors -Wall -Wextra -O1 $(debug)
#-ggdb
#-pg for profiling 

LIB?=-L/c/dev/lib/
INCLUDE?=-I/c/dev/include/

SRC=color.c

LIBNAME=libcolor.a
OBJS=color.o

TESTSRC=test_color.c
TESTBIN=test_color.exe
TESTLIB=-lcolor
TESTLIBDIR=-L$(BUILDDIR)

COLOR_T_TESTSRC=test_color_t.c
COLOR_T_TESTBIN=test_color_t.exe
COLOR_T_TESTLIB=-lcolor 
COLOR_T_TESTLIBDIR=-L$(BUILDDIR) 

all: $(BUILDPATH)$(LIBNAME) $(BUILDPATH)$(TESTBIN) $(BUILDPATH)$(COLOR_T_TESTBIN) \
	 test_color test_color_t

$(BUILDPATH)$(LIBNAME): $(BUILDPATH)$(OBJS)
	$(AR) $(ARFLAGS) $(BUILDPATH)$(LIBNAME) $(BUILDPATH)$(OBJS)

$(BUILDPATH)$(OBJS): color.h
	$(CC) $(CFLAGS) -c $(SRC) -o $(BUILDPATH)$(OBJS) $(INCLUDEDIR)
	
$(BUILDPATH)$(TESTBIN):
	$(CC) $(CFLAGS) $(TESTSRC) -o $(BUILDPATH)$(TESTBIN) $(INCLUDEDIR) $(TESTLIBDIR) $(TESTLIB)
	
$(BUILDPATH)$(COLOR_T_TESTBIN):
	$(CC) $(CFLAGS) $(COLOR_T_TESTSRC) -o $(BUILDPATH)$(COLOR_T_TESTBIN) $(INCLUDEDIR) $(COLOR_T_TESTLIBDIR) $(COLOR_T_TESTLIB)
	
.PHONY: test_color test_color_t

test_color:
	./$(BUILDPATH)$(TESTBIN)

test_color_t:
	./$(BUILDPATH)$(COLOR_T_TESTBIN)

install:
	mkdir -p $(INSTALL_ROOT)include
	mkdir -p $(INSTALL_ROOT)lib
	cp ./color.h $(INSTALL_ROOT)include/color.h
	cp $(BUILDPATH)$(LIBNAME) $(INSTALL_ROOT)lib/$(LIBNAME)
